// Array erstellen Punkte mit ihren nächsten Clustern
vector<vector<struct Point* >> createArr(struct Set* set, struct Cluster* clus){
    vector<vector<struct Point*>> ergarr(set->amount, std::vector<struct Point*>(2));
    vector<vector<struct Point*>>::const_iterator i;
    vector<struct Point*>::const_iterator j;
    for(i = ergarr.begin(); i != ergarr.end(); ++i){
        (*i).at(0) = &set->points[i];
        ergarr.at(i).at(1) = argmin(ergarr[i][0], clus);
    }
    return ergarr;
}

// Printed ein Array
void printArr(vector<vector<struct Point*>> ergarr){
    vector<vector<struct Point*>>::const_iterator i;
    vector<struct Point*>::const_iterator j;
    cout<< "Points:\nx\ty\n";
    for(i = ergarr.begin(); i != ergarr.end(); ++i){
        for(j = i->begin(); j != i->end(); ++j){
            cout<< (*j)->x << "\t" << (*j)->y;
        }
    }
}